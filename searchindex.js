Search.setIndex({"docnames": ["index", "modules/backend", "modules/hodata", "modules/honn", "notes/datastructure", "notes/hodata", "notes/installation", "notes/miniexample", "notes/multtensor", "notes/operator"], "filenames": ["index.rst", "modules/backend.rst", "modules/hodata.rst", "modules/honn.rst", "notes/datastructure.rst", "notes/hodata.rst", "notes/installation.rst", "notes/miniexample.rst", "notes/multtensor.rst", "notes/operator.rst"], "titles": ["PyTorch Geometric High Order Documentation", "pygho.backend package", "pygho.hodata package", "pygho.honn package", "Basic Data Structure", "Efficient High Order Data Processing", "Installation", "Minimal Example", "Multiple Tensor", "Operators"], "terms": {"pygho": [0, 4, 5, 6, 7, 9], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9], "librari": [0, 4, 5, 7, 9], "gnn": [0, 3, 7, 8, 9], "ordinari": [0, 5, 7], "like": [0, 4, 7, 8, 9], "gcn": 0, "gin": [0, 9], "graphsag": 0, "all": [0, 1, 2, 3, 7, 9], "pass": [0, 3, 7, 8, 9], "messag": [0, 1, 3, 7, 8, 9], "between": [0, 1, 2, 3, 5, 8, 9], "node": [0, 2, 3, 4, 5, 7, 9], "produc": [0, 1, 5, 7, 9], "represent": [0, 2, 3, 4, 5, 7, 9], "The": [0, 1, 2, 3, 4, 5, 6, 7, 9], "form": [0, 2], "dens": [0, 1, 2, 3, 4, 5, 8, 9], "matrix": [0, 1, 2, 3, 4, 7, 8, 9], "shape": [0, 1, 2, 3, 4, 5, 9], "n": [0, 1, 2, 3, 4, 5, 7, 9], "d": [0, 1, 3, 4, 5, 7, 9], "where": [0, 1, 3, 4, 5, 7, 9], "number": [0, 1, 2, 3, 4, 5, 9], "hidden": [0, 3], "dimens": [0, 1, 2, 3, 4, 5, 9], "exist": [0, 1, 4, 5, 9], "pyg": [0, 2, 7], "can": [0, 1, 2, 3, 4, 5, 7, 8, 9], "easili": 0, "implement": [0, 2, 3, 7, 9], "them": [0, 3, 4, 5, 8], "In": [0, 1, 4, 5, 7, 8, 9], "constrast": 0, "higher": [0, 9], "hognn": [0, 4, 5, 7, 9], "us": [0, 1, 2, 3, 4, 7, 8, 9], "tupl": [0, 1, 2, 3, 4, 7, 8, 9], "unit": [0, 1, 3], "even": 0, "more": [0, 1, 4, 5, 9], "furthermor": 0, "reduc": [0, 1, 3, 5, 9], "complex": [0, 9], "spars": [0, 1, 2, 3, 4, 7, 8], "first": [0, 1, 3, 5, 7], "unifi": [0, 3, 9], "inproceed": 0, "author": 0, "xiyuan": 0, "wang": 0, "muhan": [0, 3], "zhang": [0, 3], "titl": 0, "graph": [0, 2, 3, 5, 8, 9], "neural": [0, 3, 7, 8, 9], "network": [0, 3, 5, 7, 8, 9], "year": 0, "2023": [0, 3], "instal": 0, "minim": 0, "exampl": [0, 1, 3, 4, 5], "dataset": [0, 2, 8], "preprocess": [0, 2, 5, 8], "mini": [0, 5], "batch": [0, 1, 2, 3, 5, 8, 9], "dataload": [0, 2, 5, 8, 9], "basic": [0, 7, 9], "data": [0, 1, 2, 3, 8, 9], "structur": [0, 3, 5, 9], "maskedtensor": [0, 1, 2, 3, 5, 9], "sparsetensor": [0, 1, 2, 3, 5, 7, 9], "effici": [0, 4, 9], "process": [0, 2, 7, 8, 9], "ad": [0, 1, 3, 9], "featur": [0, 1, 2, 3, 7, 8], "oper": [0, 1, 2, 3, 4, 5, 8], "code": [0, 5, 7, 8], "architectur": 0, "multipl": [0, 1, 9], "tensor": [0, 1, 2, 3, 4, 7, 9], "backend": 0, "submodul": 0, "matensor": 0, "modul": [0, 9], "mamamm": 0, "sptensor": 0, "spmamm": 0, "spmm": 0, "spspmm": 0, "util": [0, 2, 5, 7, 9], "content": 0, "hodata": [0, 5, 7], "madata": 0, "matuplesampl": [0, 5], "parallelpreprocess": 0, "spdata": 0, "sptuplesampl": 0, "wrapper": [0, 1, 3, 9], "honn": [0, 7, 9], "conv": [0, 7], "maoper": [0, 9], "spoper": [0, 7, 9], "tensorop": [0, 9], "class": [1, 2, 3, 5, 7], "mask": [1, 2, 3, 4, 9], "booltensor": [1, 2], "padvalu": 1, "float": [1, 2, 3], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9], "is_fil": 1, "bool": [1, 2, 3, 4], "fals": [1, 2, 3], "sourc": [1, 2, 3], "base": [1, 2, 3, 8], "object": [1, 2, 3, 5], "repres": [1, 2, 3, 4, 5, 7, 9], "option": [1, 2, 3, 9], "pad": [1, 2, 5], "valu": [1, 2, 4, 5, 9], "thi": [1, 2, 3, 4, 5, 7, 8, 9], "allow": [1, 2, 3, 5, 9], "you": [1, 3, 4, 5, 7, 8, 9], "work": [1, 5, 7, 9], "have": [1, 5, 9], "indic": [1, 2, 3, 4, 5, 7, 9], "valid": [1, 4], "invalid": 1, "perform": [1, 2, 3, 4, 5, 7, 8, 9], "variou": [1, 9], "fill": [1, 2], "comput": [1, 2, 3, 5, 8, 9], "sum": [1, 2, 3, 7, 9], "mean": [1, 3, 9], "maximum": [1, 2, 9], "minimum": 1, "paramet": [1, 3, 5, 7, 9], "underli": [1, 9], "maskedshap": 1, "denseshap": 1, "true": [1, 2, 3, 5, 7], "default": [1, 2, 3, 8], "whether": [1, 2, 3, 9], "alreadi": 1, "been": 1, "attribut": [1, 2, 3, 7], "fullmask": 1, "after": [1, 3, 7, 8], "broadcast": [1, 3], "match": 1, "": [1, 2, 3, 4, 5, 7, 9], "torch": [1, 3, 4, 5, 9], "size": [1, 2, 3, 5, 7], "masked_dim": 1, "int": [1, 2, 3, 5], "dense_dim": 1, "up": 1, "method": [1, 3, 9], "fill_masked_": 1, "self": [1, 2, 7, 9], "val": [1, 5], "none": [1, 2, 3, 5, 9], "place": [1, 2], "fill_mask": 1, "return": [1, 2, 3, 5], "specifi": [1, 3], "devic": [1, 2, 5, 7], "deviceobjtyp": 1, "non_block": [1, 7], "move": 1, "dim": [1, 3], "union": [1, 2, 3], "iter": [1, 2, 3], "keepdim": 1, "along": [1, 3, 5, 7], "max": [1, 3, 5, 9], "min": [1, 9], "diag": 1, "extract": [1, 2, 3, 9], "diagon": [1, 3, 5, 7, 9], "from": [1, 3, 4, 5, 7, 9], "take": [1, 3, 5, 7, 9], "put": 1, "unpool": [1, 3, 9], "tarx": [1, 3, 9], "tuplewiseappli": 1, "func": [1, 9], "callabl": [1, 2, 3, 5], "appli": [1, 2, 3, 5, 7, 9], "function": [1, 2, 3, 5, 7, 9], "each": [1, 2, 3, 4, 5, 7, 8, 9], "element": [1, 3, 4, 5, 9], "diagonalappli": 1, "longtensor": [1, 2], "add": [1, 7, 9], "samespars": 1, "two": [1, 3, 4, 5, 8, 9], "togeth": 1, "catvalu": 1, "concaten": [1, 5, 7], "properti": [1, 2, 9], "output": [1, 3, 4, 5, 9], "inplac": 1, "some": [1, 9], "filterinf": 1, "x": [1, 2, 3, 5, 7, 8, 9], "filled_valu": [1, 2], "replac": [1, 9], "posit": 1, "neg": 1, "infin": 1, "arg": [1, 2, 3, 5, 9], "input": [1, 2, 3, 5, 7, 9], "A": [1, 2, 3, 4, 5, 7, 8, 9], "input_tensor": 1, "1": [1, 2, 3, 4, 5, 7], "2": [1, 2, 3, 4, 5, 6, 7, 8], "inf": 1, "3": [1, 2, 4, 5, 6, 7, 8, 9], "result": [1, 3, 5], "999": 1, "batched_tensordot": 1, "catdim1": 1, "dim1": [1, 3, 9], "b": [1, 2, 3, 5, 7, 9], "catdim2": 1, "dim2": [1, 3, 9], "tensordot": 1, "product": [1, 9], "ar": [1, 2, 3, 5, 6, 7, 8, 9], "contract": 1, "catshape1": 1, "broadcastshap": 1, "length": 1, "second": [1, 3], "catshape2": 1, "catshape1dim1": 1, "catshape2dim2": 1, "densedim": 1, "common": [1, 5, 9], "note": [1, 3, 4, 5], "respect": [1, 7], "optim": [1, 9], "path": [1, 5, 7], "specif": [1, 3, 4, 5, 9], "case": [1, 5, 8, 9], "e": [1, 3, 6], "g": [1, 3], "when": [1, 2, 4, 8], "broadcast_denseshap": 1, "densedim1": 1, "densedim2": 1, "same": [1, 2, 3, 5, 9], "contain": [1, 2, 3, 4, 7, 8, 9], "compat": [1, 5, 7], "smaller": 1, "until": 1, "both": [1, 3, 5, 9], "broadcast_firstdim": 1, "new": [1, 3, 5, 9], "maskedshape1": 1, "denseshapeshap": [1, 2, 3], "maskedshape2": 1, "If": [1, 2, 3, 4, 5], "ensur": [1, 5, 8, 9], "maskedshape1dim1": 1, "maskedshape2dim2": 1, "list": [1, 2, 3, 5, 7], "is_coalesc": 1, "str": [1, 2, 3], "coo": [1, 9], "format": [1, 2, 4, 9], "It": [1, 2, 3, 7, 9], "provid": [1, 3, 4, 5, 7, 9], "sparsedim": 1, "nnz": [1, 2, 4, 9], "associ": [1, 3], "should": [1, 3, 8], "coalesc": [1, 2], "check": 1, "return_spars": [1, 3], "otherwis": [1, 9], "directli": [1, 9], "cat": 1, "from_torch_sparse_coo": 1, "cl": 1, "creat": [1, 2, 4, 9], "to_torch_sparse_coo": 1, "convert": [1, 2, 5], "sparse_dim": [1, 4], "non": [1, 4, 5, 9], "zero": [1, 4, 5, 9], "sparseshap": 1, "todo": 1, "test": [1, 3], "classmethod": 1, "unpooling_fromdense1dim": 1, "maintain": [1, 5], "expand": [1, 9], "other": [1, 2, 4, 7, 8], "edge_index": [1, 2, 7], "edge_attr": [1, 2], "duplic": 1, "entri": 1, "edg": [1, 2], "weight": 1, "multi": [1, 3], "dimension": [1, 4], "given": [1, 2, 5, 9], "reshuffl": 1, "remov": [1, 9], "reduct": [1, 9], "merg": 1, "includ": [1, 3, 5, 7, 9], "mul": 1, "decodehash": 1, "indhash": 1, "decod": 1, "hash": [1, 2], "pair": [1, 9], "which": [1, 2, 3, 5, 7, 9], "commonli": 1, "rais": [1, 3], "assertionerror": [1, 3], "doesn": 1, "t": [1, 5, 7, 9], "expect": 1, "4": [1, 4, 5], "5": 1, "6": 1, "dtype": [1, 4], "long": [1, 4], "indicehash": 1, "decodehash_tight": 1, "dimsiz": 1, "tightli": 1, "consid": [1, 3, 5, 9], "don": [1, 5], "total": [1, 2, 4], "exce": 1, "rang": [1, 7, 9], "express": [1, 3, 7], "dim_siz": 1, "indicehash_tight": 1, "singl": [1, 2, 5, 9], "keep": 1, "lexicograph": 1, "order": [1, 2, 4, 7, 8, 9], "too": 1, "larg": 1, "2d": [1, 3], "equival": [1, 7, 8, 9], "flatten": 1, "aggr": [1, 3, 9], "dure": [1, 2, 8, 9], "m": [1, 4, 9], "aggreg": [1, 3], "control": 1, "multipli": 1, "than": [1, 3, 4], "must": [1, 2, 3], "filterind": 1, "tar_ind": 1, "ind": 1, "bcd": [1, 9], "combin": [1, 2, 7], "hadamard": [1, 9], "bc": 1, "index": 1, "arrai": 1, "an": [1, 2, 3, 4, 5, 7, 8, 9], "acd": [1, 9], "scatter": 1, "c": [1, 9], "filter": 1, "9": 1, "8": [1, 5, 7, 8], "7": 1, "ptr2batch": 1, "ptr": 1, "pointer": [1, 2], "torch_scatt": 1, "gather": 1, "instead": [1, 3], "correspond": [1, 4, 9], "origin": [1, 2, 9], "diff": 1, "target": [1, 3, 5, 9], "spsphadamard": 1, "b2a": [1, 9], "wise": [1, 3], "auxiliari": 1, "spsphadamard_ind": 1, "less": 1, "spspmm_ind": [1, 9], "improv": 1, "ind1": 1, "ind2": 1, "is_k2_sort": 1, "set": [1, 2, 4, 7, 9], "elimin": 1, "remain": 1, "sparsedim1": 1, "m1": 1, "sparsedim2": 1, "m2": 1, "sort": 1, "tarind": 1, "perspect": 1, "i_1": 1, "k": [1, 2, 5, 7, 9], "i_2": 1, "j_1": 1, "j_2": 1, "j": [1, 4, 7, 9], "For": [1, 3, 4, 5, 7, 8, 9], "val1": 1, "val2": 1, "th": 1, "spspmpnn": [1, 9], "message_func": [1, 3, 9], "extend": [1, 3, 5, 9], "while": [1, 3, 5, 9], "sent": 1, "third": [1, 3], "previou": [1, 9], "ani": [1, 3], "four": 1, "argument": [1, 2], "a_valu": 1, "b_valu": 1, "c_valu": 1, "custom": [1, 3], "logic": 1, "torch_scatter_reduc": 1, "src": 1, "locat": 1, "scatter_reduce_": [1, 9], "design": [1, 3, 5, 7, 9], "onli": [1, 2, 3, 4, 5, 9], "current": [1, 5], "support": [1, 3, 9], "10": 1, "high": [2, 4, 7, 8, 9], "mahodata": 2, "y": 2, "po": 2, "kwarg": 2, "batch2dens": 2, "batch_siz": [2, 5, 7], "max_num_nod": 2, "denseadj": 2, "kei": [2, 3, 5, 7, 8, 9], "main": 2, "pygbatch": 2, "adjac": [2, 3, 5, 7, 8, 9], "addit": [2, 5, 7, 8, 9], "ma_datapreprocess": 2, "tuplesampl": [2, 5, 7, 8], "annot": [2, 5, 7, 8], "pygdata": [2, 5], "sampler": [2, 7, 8], "string": [2, 5, 7], "to_dense_adj": 2, "edge_batch": 2, "assign": [2, 4, 5, 8], "to_dense_tuplefeat": 2, "tuplefeat": [2, 5, 8], "tupleshap": 2, "tuplefeatptr": 2, "max_tupleshap": 2, "feat2mask": 2, "differ": [2, 3, 5, 7, 8, 9], "subgraph": [2, 3, 4, 5, 7, 8, 9], "gener": [2, 3, 7, 9], "n1": 2, "n2": 2, "whose": 2, "ret": [2, 5, 9], "To": [2, 6, 7, 8, 9], "align": 2, "to_dense_x": 2, "nodex": 2, "xptr": 2, "to_sparse_adj": 2, "rdsampler": [2, 5], "resist": 2, "distanc": [2, 5, 7], "hop": [2, 5, 7, 8], "sampl": [2, 5, 7, 8], "precomput": [2, 3, 7, 8, 9], "spdsampler": [2, 5, 8], "parallelpreprocessdataset": [2, 5, 7, 8], "root": [2, 3, 5, 7], "data_list": 2, "pre_transform": [2, 5, 7, 8], "num_work": [2, 5, 7, 8], "processednam": 2, "transform": [2, 5, 7], "inmemorydataset": 2, "parallelli": 2, "parallel": [2, 5, 7, 9], "pygdataset": 2, "instanc": [2, 3, 4, 5, 7, 8, 9], "directori": 2, "save": [2, 5, 7], "map": 2, "execut": [2, 7], "onc": [2, 6], "typic": [2, 4, 5], "avail": 2, "cpu": 2, "core": 2, "name": [2, 3, 5], "dynam": 2, "load": [2, 5, 7], "processed_dir": 2, "folder": 2, "processed_file_nam": 2, "file": 2, "present": [2, 4, 5], "skip": 2, "sphodata": 2, "batch2spars": 2, "parsekei": 2, "pars": [2, 3], "parseop": 2, "op": 2, "get": 2, "increment": 2, "notimplementederror": 2, "inform": [2, 3, 4], "sp_datapreprocess": 2, "i2sampl": 2, "i2gnn": [2, 7, 9], "khopsampl": [2, 5, 7, 8], "k_hop_subgraph": 2, "node_idx": 2, "num_hop": 2, "relabel_nod": 2, "num_nod": [2, 5], "flow": 2, "source_to_target": 2, "direct": 2, "around": 2, "relabel": 2, "travers": 2, "target_to_sourc": 2, "subset": [2, 5, 7], "inv": 2, "invers": 2, "edge_mask": 2, "part": [2, 7], "dist": 2, "iterwrapp": 2, "batch_transform": 2, "loader": [2, 9], "madataload": [2, 5], "sequenc": 2, "basedata": 2, "datasetadapt": 2, "shuffl": [2, 5, 7], "follow_batch": 2, "exclude_kei": 2, "inner": 2, "keyword": 2, "mapretransform": [2, 5, 8], "pre": 2, "spdataload": [2, 5, 7], "sppretransform": [2, 5, 7, 8], "layer": [3, 7, 8], "built": 3, "upon": [3, 9], "mode": 3, "ss": [3, 7, 9], "sd": 3, "dd": 3, "datadict": [3, 5, 7, 9], "dssgnnconv": 3, "indim": 3, "outdim": 3, "aggr_subg": 3, "aggr_glob": 3, "pool": [3, 7, 9], "liter": 3, "mlp": [3, 7, 8, 9], "dict": [3, 9], "optuplefeat": [3, 8], "opadj": [3, 8], "paper": [3, 7], "equivari": 3, "beatric": 3, "bevilacqua": 3, "et": 3, "al": 3, "iclr": 3, "2022": 3, "within": [3, 7], "global": 3, "context": [3, 4], "type": 3, "forward": [3, 7, 9], "defin": [3, 7, 8, 9], "everi": 3, "call": 3, "overridden": 3, "subclass": 3, "although": [3, 9], "recip": 3, "need": [3, 5, 7, 8], "one": [3, 8, 9], "afterward": 3, "sinc": [3, 5], "former": 3, "care": 3, "run": [3, 6], "regist": 3, "hook": 3, "latter": 3, "silent": 3, "ignor": [3, 4], "gnnakconv": 3, "mlp0": 3, "mlp1": [3, 9], "ctx": 3, "star": 3, "uplift": 3, "local": 3, "awar": 3, "lingxiao": 3, "zhao": 3, "cross": 3, "i2conv": 3, "boost": 3, "cycl": 3, "count": [3, 4], "power": 3, "i2": 3, "yinan": 3, "huang": 3, "3d": 3, "ngnnconv": [3, 7, 8, 9], "nest": [3, 7, 8], "pan": 3, "li": 3, "neurip": 3, "2021": 3, "ppgnconv": 3, "provabl": 3, "haggai": 3, "maron": 3, "2019": 3, "sswlconv": 3, "complet": [3, 7], "hierarchi": 3, "via": 3, "weisfeil": 3, "lehman": 3, "bohang": 3, "icml": 3, "sunconv": 3, "understand": 3, "rethink": 3, "symmetri": 3, "fabrizio": 3, "frasca": 3, "sun": [3, 7, 9], "op2fwl": 3, "opmessagepass": 3, "simul": 3, "folklor": 3, "fwl": 3, "x1": 3, "x2": 3, "see": 3, "also": [3, 5, 7, 9], "denseshapeshape1": 3, "denseshapeshape2": 3, "dictionari": [3, 5, 9], "cach": 3, "intermedi": 3, "opdiag": [3, 9], "opdiag2d": 3, "Be": 3, "either": 3, "ha": [3, 4, 7, 9], "maskedshape1_dim1": 3, "maskedshape2_dim2": 3, "its": 3, "opmessagepassingcrosssubg2d": 3, "across": [3, 5, 9], "assum": [3, 9], "store": [3, 4], "denseshapeshape3": 3, "bridg": 3, "opmessagepassingonsubg2d": 3, "opmessagepassingonsubg3d": 3, "denseshape1": 3, "denseshape2": 3, "opnodemessagepass": [3, 9], "level": [3, 9], "oppool": [3, 9], "oppoolingcrosssubg2d": 3, "subgraphsfor": 3, "oppoolingsubg2d": [3, 9], "oppoolingsubg3d": 3, "opspmessagepass": 3, "opspmessagepassingcrosssubg2d": 3, "opspmessagepassingonsubg2d": 3, "opspmessagepassingonsubg3d": 3, "opspnodemessagepass": 3, "opunpool": [3, 9], "opunpoolingrootnodes2d": 3, "copi": 3, "opunpoolingsubgnodes2d": 3, "choos": 3, "op0": [3, 9], "op1": [3, 9], "op2": [3, 9], "precomputekei": 3, "retriev": [3, 4, 8, 9], "whole": 3, "nxn": 3, "ax": [3, 5], "fromdense1dim": 3, "1d": 3, "parse_precomputekei": [3, 7], "model": [3, 5, 7, 8, 9], "pytorch": [3, 5, 6, 7], "uniqu": [3, 4, 5], "found": [3, 7, 9], "mymodel": 3, "initi": [3, 5, 7], "your": [3, 5], "precompute_kei": 3, "through": [3, 5, 8], "identifi": 3, "collect": [3, 9], "offer": [3, 9], "flexibl": [3, 9], "wrap": [3, 9], "batchnorm": [3, 9], "normparam": 3, "layernorm": 3, "hiddim": [3, 7, 8, 9], "numlay": 3, "tailact": 3, "dp": 3, "norm": 3, "bn": 3, "act": [3, 9], "relu": 3, "tailbia": 3, "perceptron": 3, "customiz": 3, "activ": 3, "final": 3, "dropout": 3, "probabl": 3, "greater": 3, "normal": [3, 9], "bia": 3, "term": 3, "linear": [3, 9], "momentum": 3, "nonenorm": 3, "normmomentumschedul": 3, "mfunc": 3, "initmomentum": 3, "normtyp": 3, "nn": [3, 7, 9], "batchnorm1d": 3, "step": [3, 9], "section": [4, 5, 9], "we": [4, 5, 7, 8, 9], "ll": [4, 5, 9], "refin": 4, "explan": 4, "address": 4, "requir": [4, 5, 6, 7, 8], "demand": [4, 5], "special": [4, 9], "handl": [4, 5, 7, 9], "One": [4, 5, 9], "consist": [4, 5], "compon": 4, "text": [4, 7, 9], "resid": 4, "mathbb": [4, 5, 7, 9], "r": [4, 5, 7, 9], "time": [4, 5, 7, 9], "boolean": 4, "unus": 4, "do": [4, 9], "affect": [4, 9], "summat": [4, 9], "treat": 4, "effect": [4, 5, 7], "here": [4, 5, 7, 9], "import": [4, 5, 7], "arbitrari": 4, "follow": [4, 5, 7, 9], "begin": [4, 5, 7], "bmatrix": [4, 5, 7], "end": [4, 5, 7], "On": 4, "hand": 4, "make": [4, 5], "small": 4, "ratio": 4, "sparse_shap": 4, "dense_shap": 4, "integ": 4, "stand": 4, "column": [4, 9], "row": 4, "simplifi": [4, 5], "manipul": [4, 9], "ngnn": [4, 5, 7, 9], "h": [4, 7, 9], "v": 4, "ldot": [4, 5, 7], "h_": [4, 7, 9], "a_": [4, 9], "v_i": [4, 7, 9], "illustr": [4, 7, 9], "pleas": [4, 5, 6], "int64": 4, "itself": [4, 5], "enough": 4, "mai": [4, 8, 9], "occupi": 4, "memori": 4, "delv": [5, 7], "capabl": [5, 9], "particularli": 5, "focus": [5, 9], "strategi": 5, "mpnn": [5, 8], "share": [5, 7, 9], "task": [5, 7], "u": 5, "leverag": 5, "geometr": [5, 6], "routin": [5, 8], "howev": [5, 7, 8, 9], "cater": 5, "significantli": 5, "extens": 5, "conveni": 5, "preserv": 5, "conduct": 5, "torch_geometr": [5, 7, 9], "zinc": [5, 7], "trn_dataset": [5, 7, 8], "split": [5, 7], "train": [5, 7], "zinc_trn": [5, 7, 8], "partial": [5, 7, 8], "simultan": [5, 7, 8], "ego": [5, 7], "shortest": [5, 7], "serv": [5, 7], "close": 5, "relat": 5, "separ": [5, 9], "These": [5, 9], "simpli": [5, 6], "resisit": 5, "own": 5, "def": [5, 9], "sparsetoysampl": 5, "tupleid": 5, "stack": 5, "arang": 5, "densetoysampl": 5, "ey": 5, "oppos": 5, "becaus": 5, "infer": 5, "unnecessari": 5, "explicitli": 5, "determin": 5, "1hop": 5, "2hop": 5, "distinguish": [5, 8], "similarli": 5, "our": [5, 7, 8, 9], "achiev": [5, 7], "x___a___1___x___0": 5, "involv": [5, 8, 9], "among": [5, 9], "matric": [5, 7, 9], "signifi": 5, "refer": [5, 6], "denot": [5, 9], "manual": 5, "feed": 5, "suffici": 5, "to_dict": [5, 9], "doe": 5, "Then": [5, 9], "x1hop___a___1___x1hop___0": 5, "detail": [5, 9], "shown": 5, "enabl": [5, 7], "vari": [5, 7], "challeng": [5, 7], "emploi": 5, "adopt": 5, "rel": 5, "straightforward": [5, 9], "solut": 5, "larger": [5, 7], "a_i": [5, 7], "n_i": [5, 7, 9], "entir": [5, 7, 9], "sum_": [5, 7, 9], "arrang": 5, "those": 5, "facilit": [5, 9], "subgdata": [5, 7], "trn_dataload": [5, 7], "32": 5, "drop_last": [5, 7], "As": [5, 7, 9], "lead": 5, "lot": 5, "space": 5, "axi": 5, "tild": 5, "pmatrix": 5, "a_1": [5, 7], "0_": 5, "n_1": 5, "a_2": [5, 7], "n_2": 5, "vdot": [5, 7], "a_b": [5, 7], "n_b": 5, "x_1": [5, 7], "x_2": [5, 7], "x_b": [5, 7], "purpos": 5, "256": 5, "pytorch_geometr": 6, "offici": 6, "site": 6, "version": [6, 9], "git": 6, "clone": 6, "http": 6, "github": 6, "com": 6, "graphpku": 6, "cd": [6, 9], "pip": 6, "updat": 6, "pull": 6, "let": [7, 9], "fundament": 7, "concept": [7, 9], "py": 7, "command": 7, "python": 7, "demonstr": [7, 9], "ij": [7, 9], "leftarrow": [7, 9], "t_": 7, "ik": [7, 9], "neighbor": [7, 9], "sever": [7, 9], "h_i": [7, 9], "p": 7, "thei": 7, "still": 7, "standard": 7, "variabl": 7, "automat": [7, 9], "cdot": 7, "a_3": 7, "x_3": 7, "128": 7, "similar": [7, 8], "definit": [7, 9], "subggnn": [7, 9], "modulelist": 7, "_": 7, "num_lay": 7, "tx": 7, "residu": 7, "connect": 7, "convolut": 7, "gnnak": [7, 9], "dssgnn": [7, 9], "sswl": [7, 9], "ppgn": [7, 9], "certain": 8, "scenario": 8, "augment": 8, "respons": 8, "might": 8, "look": 8, "2hopadj": 8, "quit": 8, "xtuplefeat": 8, "x2hopadj": 8, "conclud": 8, "want": 8, "correct": 8, "modifi": 8, "symbol": 8, "ordinarili": 8, "modif": 8, "made": 8, "introduct": 9, "organ": 9, "three": 9, "lack": 9, "learn": 9, "tradit": 9, "tuplewis": 9, "build": 9, "tailor": 9, "addition": 9, "abstract": 9, "awai": 9, "encompass": 9, "lower": 9, "ones": 9, "low": 9, "numer": 9, "readi": 9, "user": 9, "develop": 9, "novel": 9, "now": 9, "explor": 9, "most": 9, "b_": 9, "sum_k": 9, "c_": 9, "d_": 9, "kj": 9, "gpu": 9, "odot": 9, "b_ij": 9, "a_ij": 9, "done": 9, "overal": 9, "goe": 9, "beyond": 9, "fact": 9, "framework": 9, "ret_": 9, "phi": 9, "multiset": 9, "gat": 9, "attentionnn1": 9, "attentionnn2": 9, "attentionnn3": 9, "transfermlpparam": 9, "lambda": 9, "tarid": 9, "scatter_softmax": 9, "attention2": 9, "usag": 9, "practic": 9, "last": 9, "essenti": 9, "problem": 9, "unlik": 9, "mlp2": 9, "diagonalmask": 9, "heterolinear": 9, "faster": 9, "Their": 9, "api": 9, "describ": 9, "f": 9, "___": 9, "signatur": 9, "obtain": 9, "how": 9, "simplic": 9, "focu": 9, "isomorph": 9, "over": 9, "convers": 9, "seem": 9, "point": 9, "induc": 9, "equat": 9, "outsid": 9, "avoid": 9, "_2": 9, "xn": 9, "mlp_1": 9}, "objects": {"pygho": [[1, 0, 0, "-", "backend"], [2, 0, 0, "-", "hodata"], [3, 0, 0, "-", "honn"]], "pygho.backend": [[1, 0, 0, "-", "MaTensor"], [1, 0, 0, "-", "Mamamm"], [1, 0, 0, "-", "SpTensor"], [1, 0, 0, "-", "Spmamm"], [1, 0, 0, "-", "Spmm"], [1, 0, 0, "-", "Spspmm"], [1, 0, 0, "-", "utils"]], "pygho.backend.MaTensor": [[1, 1, 1, "", "MaskedTensor"], [1, 4, 1, "", "filterinf"]], "pygho.backend.MaTensor.MaskedTensor": [[1, 2, 1, "", "add"], [1, 2, 1, "", "catvalue"], [1, 3, 1, "", "data"], [1, 3, 1, "", "dense_dim"], [1, 3, 1, "", "denseshape"], [1, 2, 1, "", "diag"], [1, 2, 1, "", "diagonalapply"], [1, 2, 1, "", "fill_masked"], [1, 2, 1, "", "fill_masked_"], [1, 3, 1, "", "fullmask"], [1, 3, 1, "", "mask"], [1, 3, 1, "", "masked_dim"], [1, 3, 1, "", "maskedshape"], [1, 2, 1, "", "max"], [1, 2, 1, "", "mean"], [1, 2, 1, "", "min"], [1, 3, 1, "", "padvalue"], [1, 3, 1, "", "shape"], [1, 2, 1, "", "sum"], [1, 2, 1, "", "to"], [1, 2, 1, "", "tuplewiseapply"], [1, 2, 1, "", "unpooling"]], "pygho.backend.Mamamm": [[1, 4, 1, "", "batched_tensordot"], [1, 4, 1, "", "broadcast_denseshape"], [1, 4, 1, "", "mamamm"]], "pygho.backend.SpTensor": [[1, 1, 1, "", "SparseTensor"], [1, 4, 1, "", "coalesce"], [1, 4, 1, "", "decodehash"], [1, 4, 1, "", "decodehash_tight"], [1, 4, 1, "", "indicehash"], [1, 4, 1, "", "indicehash_tight"]], "pygho.backend.SpTensor.SparseTensor": [[1, 2, 1, "", "add"], [1, 2, 1, "", "catvalue"], [1, 3, 1, "", "denseshape"], [1, 2, 1, "", "diag"], [1, 2, 1, "", "diagonalapply"], [1, 2, 1, "", "from_torch_sparse_coo"], [1, 3, 1, "", "indices"], [1, 2, 1, "", "is_coalesced"], [1, 2, 1, "", "max"], [1, 2, 1, "", "mean"], [1, 3, 1, "", "nnz"], [1, 3, 1, "", "shape"], [1, 3, 1, "", "sparse_dim"], [1, 3, 1, "", "sparseshape"], [1, 2, 1, "", "sum"], [1, 2, 1, "", "to"], [1, 2, 1, "", "to_torch_sparse_coo"], [1, 2, 1, "", "tuplewiseapply"], [1, 2, 1, "", "unpooling"], [1, 2, 1, "", "unpooling_fromdense1dim"], [1, 3, 1, "", "values"]], "pygho.backend.Spmamm": [[1, 4, 1, "", "spmamm"]], "pygho.backend.Spmm": [[1, 4, 1, "", "spmm"]], "pygho.backend.Spspmm": [[1, 4, 1, "", "filterind"], [1, 4, 1, "", "ptr2batch"], [1, 4, 1, "", "spsphadamard"], [1, 4, 1, "", "spsphadamard_ind"], [1, 4, 1, "", "spspmm"], [1, 4, 1, "", "spspmm_ind"], [1, 4, 1, "", "spspmpnn"]], "pygho.backend.utils": [[1, 4, 1, "", "torch_scatter_reduce"]], "pygho.hodata": [[2, 0, 0, "-", "MaData"], [2, 0, 0, "-", "MaTupleSampler"], [2, 0, 0, "-", "ParallelPreprocess"], [2, 0, 0, "-", "SpData"], [2, 0, 0, "-", "SpTupleSampler"], [2, 0, 0, "-", "Wrapper"]], "pygho.hodata.MaData": [[2, 1, 1, "", "MaHoData"], [2, 4, 1, "", "batch2dense"], [2, 4, 1, "", "ma_datapreprocess"], [2, 4, 1, "", "to_dense_adj"], [2, 4, 1, "", "to_dense_tuplefeat"], [2, 4, 1, "", "to_dense_x"], [2, 4, 1, "", "to_sparse_adj"]], "pygho.hodata.MaTupleSampler": [[2, 4, 1, "", "rdsampler"], [2, 4, 1, "", "spdsampler"]], "pygho.hodata.ParallelPreprocess": [[2, 1, 1, "", "ParallelPreprocessDataset"]], "pygho.hodata.ParallelPreprocess.ParallelPreprocessDataset": [[2, 2, 1, "", "process"], [2, 3, 1, "", "processed_dir"], [2, 3, 1, "", "processed_file_names"]], "pygho.hodata.SpData": [[2, 1, 1, "", "SpHoData"], [2, 4, 1, "", "batch2sparse"], [2, 4, 1, "", "parsekey"], [2, 4, 1, "", "parseop"], [2, 4, 1, "", "sp_datapreprocess"]], "pygho.hodata.SpTupleSampler": [[2, 4, 1, "", "I2Sampler"], [2, 4, 1, "", "KhopSampler"], [2, 4, 1, "", "k_hop_subgraph"]], "pygho.hodata.Wrapper": [[2, 1, 1, "", "IterWrapper"], [2, 1, 1, "", "MaDataloader"], [2, 4, 1, "", "Mapretransform"], [2, 1, 1, "", "SpDataloader"], [2, 4, 1, "", "Sppretransform"]], "pygho.honn": [[3, 0, 0, "-", "Conv"], [3, 0, 0, "-", "MaOperator"], [3, 0, 0, "-", "SpOperator"], [3, 0, 0, "-", "TensorOp"], [3, 0, 0, "-", "utils"]], "pygho.honn.Conv": [[3, 1, 1, "", "DSSGNNConv"], [3, 1, 1, "", "GNNAKConv"], [3, 1, 1, "", "I2Conv"], [3, 1, 1, "", "NGNNConv"], [3, 1, 1, "", "PPGNConv"], [3, 1, 1, "", "SSWLConv"], [3, 1, 1, "", "SUNConv"]], "pygho.honn.Conv.DSSGNNConv": [[3, 2, 1, "", "forward"]], "pygho.honn.Conv.GNNAKConv": [[3, 2, 1, "", "forward"]], "pygho.honn.Conv.I2Conv": [[3, 2, 1, "", "forward"]], "pygho.honn.Conv.NGNNConv": [[3, 2, 1, "", "forward"]], "pygho.honn.Conv.PPGNConv": [[3, 2, 1, "", "forward"]], "pygho.honn.Conv.SSWLConv": [[3, 2, 1, "", "forward"]], "pygho.honn.Conv.SUNConv": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator": [[3, 1, 1, "", "Op2FWL"], [3, 1, 1, "", "OpDiag"], [3, 1, 1, "", "OpDiag2D"], [3, 1, 1, "", "OpMessagePassing"], [3, 1, 1, "", "OpMessagePassingCrossSubg2D"], [3, 1, 1, "", "OpMessagePassingOnSubg2D"], [3, 1, 1, "", "OpMessagePassingOnSubg3D"], [3, 1, 1, "", "OpNodeMessagePassing"], [3, 1, 1, "", "OpPooling"], [3, 1, 1, "", "OpPoolingCrossSubg2D"], [3, 1, 1, "", "OpPoolingSubg2D"], [3, 1, 1, "", "OpPoolingSubg3D"], [3, 1, 1, "", "OpSpMessagePassing"], [3, 1, 1, "", "OpSpMessagePassingCrossSubg2D"], [3, 1, 1, "", "OpSpMessagePassingOnSubg2D"], [3, 1, 1, "", "OpSpMessagePassingOnSubg3D"], [3, 1, 1, "", "OpSpNodeMessagePassing"], [3, 1, 1, "", "OpUnpooling"], [3, 1, 1, "", "OpUnpoolingRootNodes2D"], [3, 1, 1, "", "OpUnpoolingSubgNodes2D"]], "pygho.honn.MaOperator.Op2FWL": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpDiag": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpDiag2D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpMessagePassing": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpMessagePassingCrossSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpMessagePassingOnSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpMessagePassingOnSubg3D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpNodeMessagePassing": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpPooling": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpPoolingCrossSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpPoolingSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpPoolingSubg3D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpSpMessagePassing": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpSpMessagePassingCrossSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpSpMessagePassingOnSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpSpMessagePassingOnSubg3D": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpSpNodeMessagePassing": [[3, 2, 1, "", "forward"]], "pygho.honn.MaOperator.OpUnpooling": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator": [[3, 1, 1, "", "Op2FWL"], [3, 1, 1, "", "OpDiag"], [3, 1, 1, "", "OpDiag2D"], [3, 1, 1, "", "OpMessagePassing"], [3, 1, 1, "", "OpMessagePassingCrossSubg2D"], [3, 1, 1, "", "OpMessagePassingOnSubg2D"], [3, 1, 1, "", "OpMessagePassingOnSubg3D"], [3, 1, 1, "", "OpNodeMessagePassing"], [3, 1, 1, "", "OpPooling"], [3, 1, 1, "", "OpPoolingCrossSubg2D"], [3, 1, 1, "", "OpPoolingSubg2D"], [3, 1, 1, "", "OpPoolingSubg3D"], [3, 1, 1, "", "OpUnpooling"], [3, 1, 1, "", "OpUnpoolingRootNodes2D"], [3, 1, 1, "", "OpUnpoolingSubgNodes2D"], [3, 4, 1, "", "parse_precomputekey"]], "pygho.honn.SpOperator.Op2FWL": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpDiag": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpDiag2D": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpMessagePassing": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpMessagePassingCrossSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpMessagePassingOnSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpMessagePassingOnSubg3D": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpNodeMessagePassing": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpPooling": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpPoolingCrossSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpPoolingSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpPoolingSubg3D": [[3, 2, 1, "", "forward"]], "pygho.honn.SpOperator.OpUnpooling": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp": [[3, 1, 1, "", "Op2FWL"], [3, 1, 1, "", "OpDiag2D"], [3, 1, 1, "", "OpMessagePassingCrossSubg2D"], [3, 1, 1, "", "OpMessagePassingOnSubg2D"], [3, 1, 1, "", "OpMessagePassingOnSubg3D"], [3, 1, 1, "", "OpNodeMessagePassing"], [3, 1, 1, "", "OpPoolingCrossSubg2D"], [3, 1, 1, "", "OpPoolingSubg2D"], [3, 1, 1, "", "OpPoolingSubg3D"], [3, 1, 1, "", "OpUnpoolingRootNodes2D"], [3, 1, 1, "", "OpUnpoolingSubgNodes2D"]], "pygho.honn.TensorOp.Op2FWL": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpDiag2D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpMessagePassingCrossSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpMessagePassingOnSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpMessagePassingOnSubg3D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpNodeMessagePassing": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpPoolingCrossSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpPoolingSubg2D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpPoolingSubg3D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpUnpoolingRootNodes2D": [[3, 2, 1, "", "forward"]], "pygho.honn.TensorOp.OpUnpoolingSubgNodes2D": [[3, 2, 1, "", "forward"]], "pygho.honn.utils": [[3, 1, 1, "", "BatchNorm"], [3, 1, 1, "", "LayerNorm"], [3, 1, 1, "", "MLP"], [3, 1, 1, "", "NoneNorm"], [3, 1, 1, "", "NormMomentumScheduler"]], "pygho.honn.utils.BatchNorm": [[3, 2, 1, "", "forward"]], "pygho.honn.utils.LayerNorm": [[3, 2, 1, "", "forward"]], "pygho.honn.utils.MLP": [[3, 2, 1, "", "forward"]], "pygho.honn.utils.NoneNorm": [[3, 2, 1, "", "forward"]], "pygho.honn.utils.NormMomentumScheduler": [[3, 2, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"pytorch": 0, "geometr": 0, "high": [0, 5], "order": [0, 5], "document": 0, "note": 0, "advanc": 0, "tutori": 0, "packag": [0, 1, 2, 3], "refer": 0, "pygho": [1, 2, 3], "backend": [1, 9], "submodul": [1, 2, 3], "matensor": 1, "modul": [1, 2, 3], "mamamm": 1, "sptensor": 1, "spmamm": 1, "spmm": 1, "spspmm": [1, 9], "util": [1, 3], "content": [1, 2, 3], "hodata": 2, "madata": 2, "matuplesampl": 2, "parallelpreprocess": 2, "spdata": 2, "sptuplesampl": 2, "wrapper": 2, "honn": 3, "conv": 3, "maoper": 3, "spoper": 3, "tensorop": 3, "basic": 4, "data": [4, 5], "structur": 4, "maskedtensor": 4, "sparsetensor": 4, "effici": 5, "process": 5, "ad": 5, "featur": 5, "pyg": 5, "dataset": [5, 7], "precomput": 5, "defin": 5, "custom": 5, "tupl": 5, "sampler": 5, "us": 5, "multipl": [5, 8], "spars": [5, 9], "matrix": 5, "tensor": [5, 8], "mask": 5, "instal": 6, "minim": 7, "exampl": [7, 9], "preprocess": 7, "mini": 7, "batch": 7, "dataload": 7, "learn": 7, "method": 7, "graph": 7, "oper": 9, "code": 9, "architectur": 9, "layer": 9, "1": 9, "tuplewiseappli": 9, "diagonalappli": 9, "2": 9, "opmessagepass": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"PyTorch Geometric High Order Documentation": [[0, "pytorch-geometric-high-order-documentation"]], "Notes": [[0, null]], "Advanced Tutorial": [[0, null]], "Package Reference": [[0, null]], "pygho.backend package": [[1, "pygho-backend-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"]], "pygho.backend.MaTensor module": [[1, "module-pygho.backend.MaTensor"]], "pygho.backend.Mamamm module": [[1, "module-pygho.backend.Mamamm"]], "pygho.backend.SpTensor module": [[1, "module-pygho.backend.SpTensor"]], "pygho.backend.Spmamm module": [[1, "module-pygho.backend.Spmamm"]], "pygho.backend.Spmm module": [[1, "module-pygho.backend.Spmm"]], "pygho.backend.Spspmm module": [[1, "module-pygho.backend.Spspmm"]], "pygho.backend.utils module": [[1, "module-pygho.backend.utils"]], "Module contents": [[1, "module-pygho.backend"], [2, "module-pygho.hodata"], [3, "module-pygho.honn"]], "pygho.hodata package": [[2, "pygho-hodata-package"]], "pygho.hodata.MaData module": [[2, "module-pygho.hodata.MaData"]], "pygho.hodata.MaTupleSampler module": [[2, "module-pygho.hodata.MaTupleSampler"]], "pygho.hodata.ParallelPreprocess module": [[2, "module-pygho.hodata.ParallelPreprocess"]], "pygho.hodata.SpData module": [[2, "module-pygho.hodata.SpData"]], "pygho.hodata.SpTupleSampler module": [[2, "module-pygho.hodata.SpTupleSampler"]], "pygho.hodata.Wrapper module": [[2, "module-pygho.hodata.Wrapper"]], "pygho.honn package": [[3, "pygho-honn-package"]], "pygho.honn.Conv module": [[3, "module-pygho.honn.Conv"]], "pygho.honn.MaOperator module": [[3, "module-pygho.honn.MaOperator"]], "pygho.honn.SpOperator module": [[3, "module-pygho.honn.SpOperator"]], "pygho.honn.TensorOp module": [[3, "module-pygho.honn.TensorOp"]], "pygho.honn.utils module": [[3, "module-pygho.honn.utils"]], "Basic Data Structure": [[4, "basic-data-structure"]], "MaskedTensor": [[4, "maskedtensor"]], "SparseTensor": [[4, "sparsetensor"]], "Efficient High Order Data Processing": [[5, "efficient-high-order-data-processing"]], "Adding High Order Features to PyG Dataset": [[5, "adding-high-order-features-to-pyg-dataset"]], "Efficient High-Order Feature Precomputation": [[5, "efficient-high-order-feature-precomputation"]], "Defining Custom Tuple Samplers": [[5, "defining-custom-tuple-samplers"]], "Using Multiple Tuple Samplers": [[5, "using-multiple-tuple-samplers"]], "Sparse-Sparse Matrix Multiplication Precomputation": [[5, "sparse-sparse-matrix-multiplication-precomputation"]], "Sparse Tensor Data": [[5, "sparse-tensor-data"]], "Masked Tensor Data": [[5, "masked-tensor-data"]], "Installation": [[6, "installation"]], "Minimal Example": [[7, "minimal-example"]], "Dataset Preprocessing": [[7, "dataset-preprocessing"]], "Mini-batch and DataLoader": [[7, "mini-batch-and-dataloader"]], "Learning Methods on Graphs": [[7, "learning-methods-on-graphs"]], "Multiple Tensor": [[8, "multiple-tensor"]], "Operators": [[9, "operators"]], "Code Architecture": [[9, "code-architecture"]], "Layer 1: Backend": [[9, "layer-1-backend"]], "Spspmm": [[9, "spspmm"]], "TuplewiseApply": [[9, "tuplewiseapply"]], "DiagonalApply": [[9, "diagonalapply"]], "Layer 2: Operators": [[9, "layer-2-operators"]], "Sparse OpMessagePassing": [[9, "sparse-opmessagepassing"]], "Example": [[9, "example"]]}, "indexentries": {"maskedtensor (class in pygho.backend.matensor)": [[1, "pygho.backend.MaTensor.MaskedTensor"]], "sparsetensor (class in pygho.backend.sptensor)": [[1, "pygho.backend.SpTensor.SparseTensor"]], "add() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.add"]], "add() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.add"]], "batched_tensordot() (in module pygho.backend.mamamm)": [[1, "pygho.backend.Mamamm.batched_tensordot"]], "broadcast_denseshape() (in module pygho.backend.mamamm)": [[1, "pygho.backend.Mamamm.broadcast_denseshape"]], "catvalue() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.catvalue"]], "catvalue() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.catvalue"]], "coalesce() (in module pygho.backend.sptensor)": [[1, "pygho.backend.SpTensor.coalesce"]], "data (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.data"]], "decodehash() (in module pygho.backend.sptensor)": [[1, "pygho.backend.SpTensor.decodehash"]], "decodehash_tight() (in module pygho.backend.sptensor)": [[1, "pygho.backend.SpTensor.decodehash_tight"]], "dense_dim (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.dense_dim"]], "denseshape (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.denseshape"]], "denseshape (pygho.backend.sptensor.sparsetensor property)": [[1, "pygho.backend.SpTensor.SparseTensor.denseshape"]], "diag() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.diag"]], "diag() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.diag"]], "diagonalapply() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.diagonalapply"]], "diagonalapply() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.diagonalapply"]], "fill_masked() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.fill_masked"]], "fill_masked_() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.fill_masked_"]], "filterind() (in module pygho.backend.spspmm)": [[1, "pygho.backend.Spspmm.filterind"]], "filterinf() (in module pygho.backend.matensor)": [[1, "pygho.backend.MaTensor.filterinf"]], "from_torch_sparse_coo() (pygho.backend.sptensor.sparsetensor class method)": [[1, "pygho.backend.SpTensor.SparseTensor.from_torch_sparse_coo"]], "fullmask (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.fullmask"]], "indicehash() (in module pygho.backend.sptensor)": [[1, "pygho.backend.SpTensor.indicehash"]], "indicehash_tight() (in module pygho.backend.sptensor)": [[1, "pygho.backend.SpTensor.indicehash_tight"]], "indices (pygho.backend.sptensor.sparsetensor property)": [[1, "pygho.backend.SpTensor.SparseTensor.indices"]], "is_coalesced() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.is_coalesced"]], "mamamm() (in module pygho.backend.mamamm)": [[1, "pygho.backend.Mamamm.mamamm"]], "mask (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.mask"]], "masked_dim (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.masked_dim"]], "maskedshape (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.maskedshape"]], "max() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.max"]], "max() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.max"]], "mean() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.mean"]], "mean() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.mean"]], "min() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.min"]], "module": [[1, "module-pygho.backend"], [1, "module-pygho.backend.MaTensor"], [1, "module-pygho.backend.Mamamm"], [1, "module-pygho.backend.SpTensor"], [1, "module-pygho.backend.Spmamm"], [1, "module-pygho.backend.Spmm"], [1, "module-pygho.backend.Spspmm"], [1, "module-pygho.backend.utils"], [2, "module-pygho.hodata"], [2, "module-pygho.hodata.MaData"], [2, "module-pygho.hodata.MaTupleSampler"], [2, "module-pygho.hodata.ParallelPreprocess"], [2, "module-pygho.hodata.SpData"], [2, "module-pygho.hodata.SpTupleSampler"], [2, "module-pygho.hodata.Wrapper"], [3, "module-pygho.honn"], [3, "module-pygho.honn.Conv"], [3, "module-pygho.honn.MaOperator"], [3, "module-pygho.honn.SpOperator"], [3, "module-pygho.honn.TensorOp"], [3, "module-pygho.honn.utils"]], "nnz (pygho.backend.sptensor.sparsetensor property)": [[1, "pygho.backend.SpTensor.SparseTensor.nnz"]], "padvalue (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.padvalue"]], "ptr2batch() (in module pygho.backend.spspmm)": [[1, "pygho.backend.Spspmm.ptr2batch"]], "pygho.backend": [[1, "module-pygho.backend"]], "pygho.backend.matensor": [[1, "module-pygho.backend.MaTensor"]], "pygho.backend.mamamm": [[1, "module-pygho.backend.Mamamm"]], "pygho.backend.sptensor": [[1, "module-pygho.backend.SpTensor"]], "pygho.backend.spmamm": [[1, "module-pygho.backend.Spmamm"]], "pygho.backend.spmm": [[1, "module-pygho.backend.Spmm"]], "pygho.backend.spspmm": [[1, "module-pygho.backend.Spspmm"]], "pygho.backend.utils": [[1, "module-pygho.backend.utils"]], "shape (pygho.backend.matensor.maskedtensor property)": [[1, "pygho.backend.MaTensor.MaskedTensor.shape"]], "shape (pygho.backend.sptensor.sparsetensor property)": [[1, "pygho.backend.SpTensor.SparseTensor.shape"]], "sparse_dim (pygho.backend.sptensor.sparsetensor property)": [[1, "pygho.backend.SpTensor.SparseTensor.sparse_dim"]], "sparseshape (pygho.backend.sptensor.sparsetensor property)": [[1, "pygho.backend.SpTensor.SparseTensor.sparseshape"]], "spmamm() (in module pygho.backend.spmamm)": [[1, "pygho.backend.Spmamm.spmamm"]], "spmm() (in module pygho.backend.spmm)": [[1, "pygho.backend.Spmm.spmm"]], "spsphadamard() (in module pygho.backend.spspmm)": [[1, "pygho.backend.Spspmm.spsphadamard"]], "spsphadamard_ind() (in module pygho.backend.spspmm)": [[1, "pygho.backend.Spspmm.spsphadamard_ind"]], "spspmm() (in module pygho.backend.spspmm)": [[1, "pygho.backend.Spspmm.spspmm"]], "spspmm_ind() (in module pygho.backend.spspmm)": [[1, "pygho.backend.Spspmm.spspmm_ind"]], "spspmpnn() (in module pygho.backend.spspmm)": [[1, "pygho.backend.Spspmm.spspmpnn"]], "sum() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.sum"]], "sum() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.sum"]], "to() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.to"]], "to() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.to"]], "to_torch_sparse_coo() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.to_torch_sparse_coo"]], "torch_scatter_reduce() (in module pygho.backend.utils)": [[1, "pygho.backend.utils.torch_scatter_reduce"]], "tuplewiseapply() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.tuplewiseapply"]], "tuplewiseapply() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.tuplewiseapply"]], "unpooling() (pygho.backend.matensor.maskedtensor method)": [[1, "pygho.backend.MaTensor.MaskedTensor.unpooling"]], "unpooling() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.unpooling"]], "unpooling_fromdense1dim() (pygho.backend.sptensor.sparsetensor method)": [[1, "pygho.backend.SpTensor.SparseTensor.unpooling_fromdense1dim"]], "values (pygho.backend.sptensor.sparsetensor property)": [[1, "pygho.backend.SpTensor.SparseTensor.values"]], "i2sampler() (in module pygho.hodata.sptuplesampler)": [[2, "pygho.hodata.SpTupleSampler.I2Sampler"]], "iterwrapper (class in pygho.hodata.wrapper)": [[2, "pygho.hodata.Wrapper.IterWrapper"]], "khopsampler() (in module pygho.hodata.sptuplesampler)": [[2, "pygho.hodata.SpTupleSampler.KhopSampler"]], "madataloader (class in pygho.hodata.wrapper)": [[2, "pygho.hodata.Wrapper.MaDataloader"]], "mahodata (class in pygho.hodata.madata)": [[2, "pygho.hodata.MaData.MaHoData"]], "mapretransform() (in module pygho.hodata.wrapper)": [[2, "pygho.hodata.Wrapper.Mapretransform"]], "parallelpreprocessdataset (class in pygho.hodata.parallelpreprocess)": [[2, "pygho.hodata.ParallelPreprocess.ParallelPreprocessDataset"]], "spdataloader (class in pygho.hodata.wrapper)": [[2, "pygho.hodata.Wrapper.SpDataloader"]], "sphodata (class in pygho.hodata.spdata)": [[2, "pygho.hodata.SpData.SpHoData"]], "sppretransform() (in module pygho.hodata.wrapper)": [[2, "pygho.hodata.Wrapper.Sppretransform"]], "batch2dense() (in module pygho.hodata.madata)": [[2, "pygho.hodata.MaData.batch2dense"]], "batch2sparse() (in module pygho.hodata.spdata)": [[2, "pygho.hodata.SpData.batch2sparse"]], "k_hop_subgraph() (in module pygho.hodata.sptuplesampler)": [[2, "pygho.hodata.SpTupleSampler.k_hop_subgraph"]], "ma_datapreprocess() (in module pygho.hodata.madata)": [[2, "pygho.hodata.MaData.ma_datapreprocess"]], "parsekey() (in module pygho.hodata.spdata)": [[2, "pygho.hodata.SpData.parsekey"]], "parseop() (in module pygho.hodata.spdata)": [[2, "pygho.hodata.SpData.parseop"]], "process() (pygho.hodata.parallelpreprocess.parallelpreprocessdataset method)": [[2, "pygho.hodata.ParallelPreprocess.ParallelPreprocessDataset.process"]], "processed_dir (pygho.hodata.parallelpreprocess.parallelpreprocessdataset property)": [[2, "pygho.hodata.ParallelPreprocess.ParallelPreprocessDataset.processed_dir"]], "processed_file_names (pygho.hodata.parallelpreprocess.parallelpreprocessdataset property)": [[2, "pygho.hodata.ParallelPreprocess.ParallelPreprocessDataset.processed_file_names"]], "pygho.hodata": [[2, "module-pygho.hodata"]], "pygho.hodata.madata": [[2, "module-pygho.hodata.MaData"]], "pygho.hodata.matuplesampler": [[2, "module-pygho.hodata.MaTupleSampler"]], "pygho.hodata.parallelpreprocess": [[2, "module-pygho.hodata.ParallelPreprocess"]], "pygho.hodata.spdata": [[2, "module-pygho.hodata.SpData"]], "pygho.hodata.sptuplesampler": [[2, "module-pygho.hodata.SpTupleSampler"]], "pygho.hodata.wrapper": [[2, "module-pygho.hodata.Wrapper"]], "rdsampler() (in module pygho.hodata.matuplesampler)": [[2, "pygho.hodata.MaTupleSampler.rdsampler"]], "sp_datapreprocess() (in module pygho.hodata.spdata)": [[2, "pygho.hodata.SpData.sp_datapreprocess"]], "spdsampler() (in module pygho.hodata.matuplesampler)": [[2, "pygho.hodata.MaTupleSampler.spdsampler"]], "to_dense_adj() (in module pygho.hodata.madata)": [[2, "pygho.hodata.MaData.to_dense_adj"]], "to_dense_tuplefeat() (in module pygho.hodata.madata)": [[2, "pygho.hodata.MaData.to_dense_tuplefeat"]], "to_dense_x() (in module pygho.hodata.madata)": [[2, "pygho.hodata.MaData.to_dense_x"]], "to_sparse_adj() (in module pygho.hodata.madata)": [[2, "pygho.hodata.MaData.to_sparse_adj"]], "batchnorm (class in pygho.honn.utils)": [[3, "pygho.honn.utils.BatchNorm"]], "dssgnnconv (class in pygho.honn.conv)": [[3, "pygho.honn.Conv.DSSGNNConv"]], "gnnakconv (class in pygho.honn.conv)": [[3, "pygho.honn.Conv.GNNAKConv"]], "i2conv (class in pygho.honn.conv)": [[3, "pygho.honn.Conv.I2Conv"]], "layernorm (class in pygho.honn.utils)": [[3, "pygho.honn.utils.LayerNorm"]], "mlp (class in pygho.honn.utils)": [[3, "pygho.honn.utils.MLP"]], "ngnnconv (class in pygho.honn.conv)": [[3, "pygho.honn.Conv.NGNNConv"]], "nonenorm (class in pygho.honn.utils)": [[3, "pygho.honn.utils.NoneNorm"]], "normmomentumscheduler (class in pygho.honn.utils)": [[3, "pygho.honn.utils.NormMomentumScheduler"]], "op2fwl (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.Op2FWL"]], "op2fwl (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.Op2FWL"]], "op2fwl (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.Op2FWL"]], "opdiag (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpDiag"]], "opdiag (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpDiag"]], "opdiag2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpDiag2D"]], "opdiag2d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpDiag2D"]], "opdiag2d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpDiag2D"]], "opmessagepassing (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpMessagePassing"]], "opmessagepassing (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpMessagePassing"]], "opmessagepassingcrosssubg2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpMessagePassingCrossSubg2D"]], "opmessagepassingcrosssubg2d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpMessagePassingCrossSubg2D"]], "opmessagepassingcrosssubg2d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpMessagePassingCrossSubg2D"]], "opmessagepassingonsubg2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpMessagePassingOnSubg2D"]], "opmessagepassingonsubg2d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpMessagePassingOnSubg2D"]], "opmessagepassingonsubg2d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpMessagePassingOnSubg2D"]], "opmessagepassingonsubg3d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpMessagePassingOnSubg3D"]], "opmessagepassingonsubg3d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpMessagePassingOnSubg3D"]], "opmessagepassingonsubg3d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpMessagePassingOnSubg3D"]], "opnodemessagepassing (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpNodeMessagePassing"]], "opnodemessagepassing (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpNodeMessagePassing"]], "opnodemessagepassing (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpNodeMessagePassing"]], "oppooling (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpPooling"]], "oppooling (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpPooling"]], "oppoolingcrosssubg2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpPoolingCrossSubg2D"]], "oppoolingcrosssubg2d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpPoolingCrossSubg2D"]], "oppoolingcrosssubg2d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpPoolingCrossSubg2D"]], "oppoolingsubg2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpPoolingSubg2D"]], "oppoolingsubg2d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpPoolingSubg2D"]], "oppoolingsubg2d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpPoolingSubg2D"]], "oppoolingsubg3d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpPoolingSubg3D"]], "oppoolingsubg3d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpPoolingSubg3D"]], "oppoolingsubg3d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpPoolingSubg3D"]], "opspmessagepassing (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpSpMessagePassing"]], "opspmessagepassingcrosssubg2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpSpMessagePassingCrossSubg2D"]], "opspmessagepassingonsubg2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpSpMessagePassingOnSubg2D"]], "opspmessagepassingonsubg3d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpSpMessagePassingOnSubg3D"]], "opspnodemessagepassing (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpSpNodeMessagePassing"]], "opunpooling (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpUnpooling"]], "opunpooling (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpUnpooling"]], "opunpoolingrootnodes2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpUnpoolingRootNodes2D"]], "opunpoolingrootnodes2d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpUnpoolingRootNodes2D"]], "opunpoolingrootnodes2d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpUnpoolingRootNodes2D"]], "opunpoolingsubgnodes2d (class in pygho.honn.maoperator)": [[3, "pygho.honn.MaOperator.OpUnpoolingSubgNodes2D"]], "opunpoolingsubgnodes2d (class in pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.OpUnpoolingSubgNodes2D"]], "opunpoolingsubgnodes2d (class in pygho.honn.tensorop)": [[3, "pygho.honn.TensorOp.OpUnpoolingSubgNodes2D"]], "ppgnconv (class in pygho.honn.conv)": [[3, "pygho.honn.Conv.PPGNConv"]], "sswlconv (class in pygho.honn.conv)": [[3, "pygho.honn.Conv.SSWLConv"]], "sunconv (class in pygho.honn.conv)": [[3, "pygho.honn.Conv.SUNConv"]], "forward() (pygho.honn.conv.dssgnnconv method)": [[3, "pygho.honn.Conv.DSSGNNConv.forward"]], "forward() (pygho.honn.conv.gnnakconv method)": [[3, "pygho.honn.Conv.GNNAKConv.forward"]], "forward() (pygho.honn.conv.i2conv method)": [[3, "pygho.honn.Conv.I2Conv.forward"]], "forward() (pygho.honn.conv.ngnnconv method)": [[3, "pygho.honn.Conv.NGNNConv.forward"]], "forward() (pygho.honn.conv.ppgnconv method)": [[3, "pygho.honn.Conv.PPGNConv.forward"]], "forward() (pygho.honn.conv.sswlconv method)": [[3, "pygho.honn.Conv.SSWLConv.forward"]], "forward() (pygho.honn.conv.sunconv method)": [[3, "pygho.honn.Conv.SUNConv.forward"]], "forward() (pygho.honn.maoperator.op2fwl method)": [[3, "pygho.honn.MaOperator.Op2FWL.forward"]], "forward() (pygho.honn.maoperator.opdiag method)": [[3, "pygho.honn.MaOperator.OpDiag.forward"]], "forward() (pygho.honn.maoperator.opdiag2d method)": [[3, "pygho.honn.MaOperator.OpDiag2D.forward"]], "forward() (pygho.honn.maoperator.opmessagepassing method)": [[3, "pygho.honn.MaOperator.OpMessagePassing.forward"]], "forward() (pygho.honn.maoperator.opmessagepassingcrosssubg2d method)": [[3, "pygho.honn.MaOperator.OpMessagePassingCrossSubg2D.forward"]], "forward() (pygho.honn.maoperator.opmessagepassingonsubg2d method)": [[3, "pygho.honn.MaOperator.OpMessagePassingOnSubg2D.forward"]], "forward() (pygho.honn.maoperator.opmessagepassingonsubg3d method)": [[3, "pygho.honn.MaOperator.OpMessagePassingOnSubg3D.forward"]], "forward() (pygho.honn.maoperator.opnodemessagepassing method)": [[3, "pygho.honn.MaOperator.OpNodeMessagePassing.forward"]], "forward() (pygho.honn.maoperator.oppooling method)": [[3, "pygho.honn.MaOperator.OpPooling.forward"]], "forward() (pygho.honn.maoperator.oppoolingcrosssubg2d method)": [[3, "pygho.honn.MaOperator.OpPoolingCrossSubg2D.forward"]], "forward() (pygho.honn.maoperator.oppoolingsubg2d method)": [[3, "pygho.honn.MaOperator.OpPoolingSubg2D.forward"]], "forward() (pygho.honn.maoperator.oppoolingsubg3d method)": [[3, "pygho.honn.MaOperator.OpPoolingSubg3D.forward"]], "forward() (pygho.honn.maoperator.opspmessagepassing method)": [[3, "pygho.honn.MaOperator.OpSpMessagePassing.forward"]], "forward() (pygho.honn.maoperator.opspmessagepassingcrosssubg2d method)": [[3, "pygho.honn.MaOperator.OpSpMessagePassingCrossSubg2D.forward"]], "forward() (pygho.honn.maoperator.opspmessagepassingonsubg2d method)": [[3, "pygho.honn.MaOperator.OpSpMessagePassingOnSubg2D.forward"]], "forward() (pygho.honn.maoperator.opspmessagepassingonsubg3d method)": [[3, "pygho.honn.MaOperator.OpSpMessagePassingOnSubg3D.forward"]], "forward() (pygho.honn.maoperator.opspnodemessagepassing method)": [[3, "pygho.honn.MaOperator.OpSpNodeMessagePassing.forward"]], "forward() (pygho.honn.maoperator.opunpooling method)": [[3, "pygho.honn.MaOperator.OpUnpooling.forward"]], "forward() (pygho.honn.spoperator.op2fwl method)": [[3, "pygho.honn.SpOperator.Op2FWL.forward"]], "forward() (pygho.honn.spoperator.opdiag method)": [[3, "pygho.honn.SpOperator.OpDiag.forward"]], "forward() (pygho.honn.spoperator.opdiag2d method)": [[3, "pygho.honn.SpOperator.OpDiag2D.forward"]], "forward() (pygho.honn.spoperator.opmessagepassing method)": [[3, "pygho.honn.SpOperator.OpMessagePassing.forward"]], "forward() (pygho.honn.spoperator.opmessagepassingcrosssubg2d method)": [[3, "pygho.honn.SpOperator.OpMessagePassingCrossSubg2D.forward"]], "forward() (pygho.honn.spoperator.opmessagepassingonsubg2d method)": [[3, "pygho.honn.SpOperator.OpMessagePassingOnSubg2D.forward"]], "forward() (pygho.honn.spoperator.opmessagepassingonsubg3d method)": [[3, "pygho.honn.SpOperator.OpMessagePassingOnSubg3D.forward"]], "forward() (pygho.honn.spoperator.opnodemessagepassing method)": [[3, "pygho.honn.SpOperator.OpNodeMessagePassing.forward"]], "forward() (pygho.honn.spoperator.oppooling method)": [[3, "pygho.honn.SpOperator.OpPooling.forward"]], "forward() (pygho.honn.spoperator.oppoolingcrosssubg2d method)": [[3, "pygho.honn.SpOperator.OpPoolingCrossSubg2D.forward"]], "forward() (pygho.honn.spoperator.oppoolingsubg2d method)": [[3, "pygho.honn.SpOperator.OpPoolingSubg2D.forward"]], "forward() (pygho.honn.spoperator.oppoolingsubg3d method)": [[3, "pygho.honn.SpOperator.OpPoolingSubg3D.forward"]], "forward() (pygho.honn.spoperator.opunpooling method)": [[3, "pygho.honn.SpOperator.OpUnpooling.forward"]], "forward() (pygho.honn.tensorop.op2fwl method)": [[3, "pygho.honn.TensorOp.Op2FWL.forward"]], "forward() (pygho.honn.tensorop.opdiag2d method)": [[3, "pygho.honn.TensorOp.OpDiag2D.forward"]], "forward() (pygho.honn.tensorop.opmessagepassingcrosssubg2d method)": [[3, "pygho.honn.TensorOp.OpMessagePassingCrossSubg2D.forward"]], "forward() (pygho.honn.tensorop.opmessagepassingonsubg2d method)": [[3, "pygho.honn.TensorOp.OpMessagePassingOnSubg2D.forward"]], "forward() (pygho.honn.tensorop.opmessagepassingonsubg3d method)": [[3, "pygho.honn.TensorOp.OpMessagePassingOnSubg3D.forward"]], "forward() (pygho.honn.tensorop.opnodemessagepassing method)": [[3, "pygho.honn.TensorOp.OpNodeMessagePassing.forward"]], "forward() (pygho.honn.tensorop.oppoolingcrosssubg2d method)": [[3, "pygho.honn.TensorOp.OpPoolingCrossSubg2D.forward"]], "forward() (pygho.honn.tensorop.oppoolingsubg2d method)": [[3, "pygho.honn.TensorOp.OpPoolingSubg2D.forward"]], "forward() (pygho.honn.tensorop.oppoolingsubg3d method)": [[3, "pygho.honn.TensorOp.OpPoolingSubg3D.forward"]], "forward() (pygho.honn.tensorop.opunpoolingrootnodes2d method)": [[3, "pygho.honn.TensorOp.OpUnpoolingRootNodes2D.forward"]], "forward() (pygho.honn.tensorop.opunpoolingsubgnodes2d method)": [[3, "pygho.honn.TensorOp.OpUnpoolingSubgNodes2D.forward"]], "forward() (pygho.honn.utils.batchnorm method)": [[3, "pygho.honn.utils.BatchNorm.forward"]], "forward() (pygho.honn.utils.layernorm method)": [[3, "pygho.honn.utils.LayerNorm.forward"]], "forward() (pygho.honn.utils.mlp method)": [[3, "pygho.honn.utils.MLP.forward"]], "forward() (pygho.honn.utils.nonenorm method)": [[3, "pygho.honn.utils.NoneNorm.forward"]], "parse_precomputekey() (in module pygho.honn.spoperator)": [[3, "pygho.honn.SpOperator.parse_precomputekey"]], "pygho.honn": [[3, "module-pygho.honn"]], "pygho.honn.conv": [[3, "module-pygho.honn.Conv"]], "pygho.honn.maoperator": [[3, "module-pygho.honn.MaOperator"]], "pygho.honn.spoperator": [[3, "module-pygho.honn.SpOperator"]], "pygho.honn.tensorop": [[3, "module-pygho.honn.TensorOp"]], "pygho.honn.utils": [[3, "module-pygho.honn.utils"]], "step() (pygho.honn.utils.normmomentumscheduler method)": [[3, "pygho.honn.utils.NormMomentumScheduler.step"]]}})